var path=require("path"),potty=require("potty"),os=require("os"),fs=require("fs"),sheriff=require("sheriff"),electron=require("electron"),date_format=require("dateformat"),pkg=require("../package.json"),scheme=pkg.scheme,version=pkg.version,rain_path={root:path.resolve(os.homedir(),".rain")};if(rain_path.lockfile=path.resolve(rain_path.root,"singleton.lock"),rain_path.log={},rain_path.log.folder=path.resolve(rain_path.root,"logs"),rain_path.log.file=path.resolve(rain_path.log.folder,date_format(new Date,"yyyymmddHHMM",!0)),"app"===process.argv[2]){var app=new potty.app(path.resolve(process.env.HOME||process.env.HOMEPATH,".rain","app"));app.on("die",function(){electron.app.exit(0)}),electron.app.on("ready",function(){app.start()})}else fs.existsSync(rain_path.root)||fs.mkdirSync(rain_path.root),sheriff.lock(rain_path.lockfile).then(function(){if("development"===scheme){fs.existsSync(rain_path.log.folder)||fs.mkdirSync(rain_path.log.folder);var e=process.stdout.write;process.stdout.write=function(o){e.apply(this,arguments),fs.appendFileSync(rain_path.log.file,o)}}var o=new potty.pot(path.resolve(process.env.HOME||process.env.HOMEPATH,".rain"),"https://rain.vg/releases/desktop-daemon/"+os.type().toLowerCase()+"-"+os.arch().toLowerCase()+"/"+scheme+"/package",{command:process.argv[0],args:[__filename,"app"],env:{ELECTRON_RUN_AS_NODE:void 0}},{log:function(){var e=Array.prototype.slice.call(arguments);e.unshift(date_format(new Date,"[yyyy-mm-dd HH:MM:ss]",!0)),console.log.apply(console.log,e)},version:version});o.on("shutdown",function(){electron.app.exit(0)}),o.start()}),process.once("SIGINT",function(){electron.app.exit(0)}).once("SIGTERM",function(){electron.app.exit(0)});